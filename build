#!/usr/bin/env python2.7

from fabricate import *
import os
import os.path

def makedirs(d):
    if not os.path.isdir(d):
        os.makedirs(d)

class Primitive(object):
    def spath(self):
        return os.path.join(
            self._ptype,
            self._cipher,
            self._implementation)

    def target_dir(self, *args):
        return os.path.join("target", self.spath(), *args)

    def source_dir(self, *args):
        return os.path.join("fetched/supercop-20130419", self.spath(), *args)

    def write_header(self):
        include_dir = self.target_dir("include")
        makedirs(include_dir)
        with open(os.path.join(include_dir, self._ptype + ".h"), "w") as f:
            f.write("\n")
        return include_dir

    def build(self):
        inc = self.write_header()
        obj = os.path.join(self.target_dir(), "obj")
        makedirs(obj)
        for name in self._cfiles:
            run("cc", "-fpic", "-Wall",
                "-I", inc,
                "-c",
                "-o",  os.path.join(obj, name + ".o"),
                self.source_dir(name + ".c"))

    def object_files(self):
        for name in self._cfiles:
            yield os.path.join(self.target_dir(), "obj", name + ".o")

class SalsaCore(Primitive):
    _ptype = "crypto_core"
    _cipher = "salsa20"
    _implementation = "ref"
    _cfiles = ["core"]

#cc -fpic -Wall -shared -Wl,-soname,libbletchleyprimitives.so.1 -o libbletchleyprimitives.so -I . supercop/crypto_stream/chacha12/krovetz/stream.c

def _gather_objfiles(primitives):
    for primitive in primitives:
        for o in primitive.object_files():
            yield o

def build_so():
    primitives = [SalsaCore()]
    for primitive in primitives:
        primitive.build()
    makedirs("target/lib")
    run("cc", "-shared", "-Wl,-soname,libbletchleyprimitives.so.1",
        "-o", "target/lib/libbletchleyprimitives.so.1.0.1",
        *list(_gather_objfiles(primitives)))
    run("ldconfig", "-n", "target/lib")
    # Is this really correct?
    os.unlink("target/lib/libbletchleyprimitives.so")
    os.symlink("libbletchleyprimitives.so.1.0.1",
        "target/lib/libbletchleyprimitives.so")

def build_c_test():
    makedirs("target/obj")
    run("cc", "-Wall", "-std=c99",
        "-o", "target/obj/call-test.o",
        "-c", "src/main/c/call-test.c")
    makedirs("target/exe")
    run("cc",
        "-o", "target/exe/call-test",
        "target/obj/call-test.o",
        "-L", "target/lib",
        "-lbletchleyprimitives")

def build():
    build_so()
    build_c_test()

if __name__ == "__main__":
    main()
